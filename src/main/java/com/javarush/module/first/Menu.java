package com.javarush.module.first;

import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Scanner;

public class Menu {
    private Model model = new Model();

    public void showMenu() {

        ReaderAndWriter readerWriter = new ReaderAndWriter();
        Scanner scanner = new Scanner(System.in);
        String relativePathToTheFile = "";
        boolean isFileExists = false;
        do {
            System.out.println("–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª—É (—Ñ–æ—Ä–º–∞—Ç : –ø–∞–ø–∫–∞/–ø–∞–ø–∫–∞/–ø–∞–ø–∫–∞/–Ω–∞–∑–≤–∞_—Ñ–∞–π–ª—É.—Ä–æ–∑–∏—Ä–µ–Ω–Ω—è) :");
            String testedFilePath = scanner.nextLine();
            try {
                if (Files.exists(Paths.get(testedFilePath))) {
                    isFileExists = true;
                    relativePathToTheFile = testedFilePath;
                } else {
                    System.out.println("–§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –∑–∞–Ω–æ–≤–æ :");
                }
            } catch (Exception e) {
                e.printStackTrace();
                break;
            }
        } while (!isFileExists);
        String originalMessage = readerWriter.reader(relativePathToTheFile);
        System.out.println(originalMessage);
        int key;
        while (true) {
            System.out.println("–°–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –∫–ª—é—á-—à–∏—Ñ—Ä—É–≤–∞–ª—å–Ω–∏–∫ (—Ü—ñ–ª–µ –¥–æ–¥–∞—Ç–Ω—î —á–∏—Å–ª–æ) :");
            if (scanner.hasNextInt()) {
                key = scanner.nextInt();
                if (key > 0) {
                    break;
                }
            } else scanner.next();
        }
        System.out.println("–©–æ–π–Ω–æ –∑–∞—à–∏—Ñ—Ä—É–≤–∞–ª–∏—Å—è –Ω–∞—Å—Ç—É–ø–Ω—ñ –¥–∞–Ω–Ω—ñ :");
        String codedMessage = EncryptingActions.encrypt(originalMessage, key);
        System.out.println(codedMessage);
        readerWriter.writer(codedMessage);
        System.out.println("–î–∞–Ω–Ω—ñ –∑–∞–ø–∏—Å–∞–Ω—ñ –Ω–∞ —Ñ–ª—î—à...");
        boolean answerForDecrypyionIsYesOrNo = false;
        boolean answerIfWrongDecryptionIsYesOrNo = false;
        do {
            System.out.println("–Ø–∫—â–æ –≤–∞–º –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –∑–ª–∞–º–∞—Ç–∏ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—ñ –¥–∞–Ω–Ω—ñ... \n–ù–∞–ø–∏—à—ñ—Ç—å YES —á–∏ NO");
            String userInput = scanner.next();
            if (userInput.equalsIgnoreCase("YES") || userInput.equalsIgnoreCase("NO")) {
                answerForDecrypyionIsYesOrNo = true;
            }
            if (userInput.equalsIgnoreCase("YES")) {
                System.out.println("–†–æ–∑—à–∏—Ñ—Ä–æ–≤–∫–∞ —î :" + "\n");
                System.out.println(EncryptingActions.brutForce(codedMessage));
            } else if (userInput.equalsIgnoreCase("NO")) {
                int newKey;
                while (true) {
                    String decodedMessage;
                    System.out.println("–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–µ–ª—å–Ω–∏–π –∫–ª—é—á :");
                    if (scanner.hasNextInt()) {
                        newKey = scanner.nextInt();
                        if (newKey < 0) {
                            scanner.nextLine();
                        } else if (newKey > 0) {
                            decodedMessage = EncryptingActions.decrypt(codedMessage, newKey);
                            if (EncryptingActions.isCorrectDecryption(decodedMessage)) {
                                System.out.println("–í—ñ—Ç–∞—é! –î–∞–Ω–Ω—ñ —É—Å–ø—ñ—à–Ω–æ —Ä–∞–∑—à–∏—Ñ—Ä–æ–≤–∞–Ω—ñ.");
                                System.out.println("–†–æ–∑—à–∏—Ñ—Ä–æ–≤–∫–∞ —î :\n");
                                System.out.println(decodedMessage);
                                System.out.println("\n" + "üòâüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüëçüòâ");
                                break;
                            } else {
                                System.out.println(decodedMessage);
                                System.out.println("–ß–∏—Å–µ–ª—å–Ω–∏–π –∫–ª—é—á –Ω–µ —î –∫–æ—Ä–µ–∫—Ç–Ω–∏–º");
                                do {
                                    {
                                        System.out.println("–ë–∞–∂–∞—î—Ç–µ —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ? ... \n–ù–∞–ø–∏—à—ñ—Ç—å YES —á–∏ NO");
                                        String userAnswer = scanner.next();
                                        if (userAnswer.equalsIgnoreCase("NO") || userAnswer.equalsIgnoreCase("YES")) {
                                            answerIfWrongDecryptionIsYesOrNo = true;
                                        }
                                        if (userAnswer.equalsIgnoreCase("NO")) {
                                            break;
                                        } else if (userAnswer.equalsIgnoreCase("YES")) {
                                            System.out.println("Continuing...");
                                        }
                                    }
                                } while (!answerIfWrongDecryptionIsYesOrNo);
                            }
                        }
                    } else {
                        scanner.next();
                    }
                }
            }
        } while (!answerForDecrypyionIsYesOrNo);

    }
}
